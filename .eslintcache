[{"E:\\HooksPractice\\covid19_app\\src\\index.js":"1","E:\\HooksPractice\\covid19_app\\src\\reportWebVitals.js":"2","E:\\HooksPractice\\covid19_app\\src\\App.js":"3","E:\\HooksPractice\\covid19_app\\src\\Components\\GetData.js":"4","E:\\HooksPractice\\covid19_app\\src\\Components\\Chart.js":"5","E:\\HooksPractice\\covid19_app\\src\\Components\\TablePagination.js":"6"},{"size":500,"mtime":499162500000,"results":"7","hashOfConfig":"8"},{"size":362,"mtime":499162500000,"results":"9","hashOfConfig":"8"},{"size":307,"mtime":1609313274342,"results":"10","hashOfConfig":"8"},{"size":6253,"mtime":1609569796517,"results":"11","hashOfConfig":"8"},{"size":1030,"mtime":1609249033761,"results":"12","hashOfConfig":"8"},{"size":4337,"mtime":1609313562216,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"1ablip6",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"16"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"16"},"E:\\HooksPractice\\covid19_app\\src\\index.js",[],["30","31"],"E:\\HooksPractice\\covid19_app\\src\\reportWebVitals.js",[],"E:\\HooksPractice\\covid19_app\\src\\App.js",["32"],"import React from 'react';\nimport './App.css';\nimport GetData from './Components/GetData';\nimport TablePagination from './Components/TablePagination';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <GetData/>\n      {/* <TablePagination/> */}\n      <br/>\n    </div>\n  );\n}\n\nexport default App;\n","E:\\HooksPractice\\covid19_app\\src\\Components\\GetData.js",["33","34","35"],"E:\\HooksPractice\\covid19_app\\src\\Components\\Chart.js",["36"],"import React from 'react';\r\nimport { Doughnut } from 'react-chartjs-2';\r\n\r\nexport default function Chart({GData}) {\r\n    // console.log(\"G\",GData);\r\n   const  data = {\r\n        labels: ['TotalConfirmed', 'TotalRecovered', 'TotalDeaths',],\r\n        datasets: [{\r\n            label: '# of Votes',\r\n            data: [GData.TotalConfirmed,GData.TotalRecovered,GData.TotalDeaths],\r\n            backgroundColor: [\r\n                'rgba(255, 99, 132, 0.2)',\r\n                'rgba(54, 162, 235, 0.2)',\r\n                'rgba(255, 206, 86, 0.2)',\r\n            ],\r\n            borderColor: [\r\n                'rgba(255, 99, 132, 1)',\r\n                'rgba(54, 162, 235, 1)',\r\n                'rgba(255, 206, 86, 1)'\r\n            ],\r\n            borderWidth: 1\r\n        }]\r\n    };\r\n   const options = {\r\n        scales: {\r\n            yAxes: [{\r\n                ticks: {\r\n                    beginAtZero: true\r\n                }\r\n            }]\r\n        }\r\n    }\r\n    \r\n  return (\r\n    <>\r\n    <Doughnut data={data}/>\r\n    </>\r\n  );\r\n}\r\n","E:\\HooksPractice\\covid19_app\\src\\Components\\TablePagination.js",["37"],"import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\n\r\nconst columns = [\r\n  { id: 'name', label: 'No', minWidth: 170 },\r\n  { id: 'code', label: 'Country', minWidth: 100 },\r\n  {\r\n    id: 'population',\r\n    label: 'NewConfirmed',\r\n    minWidth: 170,\r\n    align: 'right',\r\n    format: (value) => value.toLocaleString('en-US'),\r\n  },\r\n  {\r\n    id: 'size',\r\n    label: 'TotalRecovered',\r\n    minWidth: 170,\r\n    align: 'right',\r\n    format: (value) => value.toLocaleString('en-US'),\r\n  },\r\n  {\r\n    id: 'density',\r\n    label: 'NewDeaths',\r\n    minWidth: 170,\r\n    align: 'right',\r\n    format: (value) => value.toFixed(2),\r\n  },\r\n  {\r\n    id: 'density',\r\n    label: 'TotalDeaths',\r\n    minWidth: 170,\r\n    align: 'right',\r\n    format: (value) => value.toFixed(2),\r\n  },\r\n];\r\n\r\nfunction createData(name, code, population, size) {\r\n  const density = population / size;\r\n  return { name, code, population, size, density };\r\n}\r\n\r\nconst rows = [\r\n//   createData('India', 'IN', 1324171354, 3287263),\r\n//   createData('China', 'CN', 1403500365, 9596961),\r\n//   createData('Italy', 'IT', 60483973, 301340),\r\n//   createData('United States', 'US', 327167434, 9833520),\r\n//   createData('Canada', 'CA', 37602103, 9984670),\r\n//   createData('Australia', 'AU', 25475400, 7692024),\r\n//   createData('Germany', 'DE', 83019200, 357578),\r\n//   createData('Ireland', 'IE', 4857000, 70273),\r\n//   createData('Mexico', 'MX', 126577691, 1972550),\r\n//   createData('Japan', 'JP', 126317000, 377973),\r\n//   createData('France', 'FR', 67022000, 640679),\r\n//   createData('United Kingdom', 'GB', 67545757, 242495),\r\n//   createData('Russia', 'RU', 146793744, 17098246),\r\n//   createData('Nigeria', 'NG', 200962417, 923768),\r\n//   createData('Brazil', 'BR', 210147125, 8515767),\r\n];\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  container: {\r\n    maxHeight: 440,\r\n  },\r\n});\r\n\r\nexport default function StickyHeadTable({allData}) {\r\n\r\n  const classes = useStyles();\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <TableContainer className={classes.container}>\r\n        <Table stickyHeader aria-label=\"sticky table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              {columns.map((column) => (\r\n                <TableCell\r\n                  key={column.id}\r\n                  align={column.align}\r\n                  style={{ minWidth: column.minWidth }}\r\n                >\r\n                  {column.label}\r\n                </TableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {allData.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row) => {\r\n              return (\r\n                <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.code}>\r\n                  {columns.map((column) => {\r\n                    const value = row[column.id];\r\n                    return (\r\n                      <TableCell key={column.id} align={column.align}>\r\n                        {column.format && typeof value === 'number' ? column.format(value) : value}\r\n                      </TableCell>\r\n                    );\r\n                  })}\r\n                </TableRow>\r\n              );\r\n            })}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      <TablePagination\r\n        rowsPerPageOptions={[10, 25, 100]}\r\n        component=\"div\"\r\n        count={rows.length}\r\n        rowsPerPage={rowsPerPage}\r\n        page={page}\r\n        onChangePage={handleChangePage}\r\n        onChangeRowsPerPage={handleChangeRowsPerPage}\r\n      />\r\n    </Paper>\r\n  );\r\n}",{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","severity":1,"message":"43","line":4,"column":8,"nodeType":"44","messageId":"45","endLine":4,"endColumn":23},{"ruleId":"42","severity":1,"message":"46","line":14,"column":8,"nodeType":"44","messageId":"45","endLine":14,"endColumn":19},{"ruleId":"42","severity":1,"message":"47","line":47,"column":12,"nodeType":"44","messageId":"45","endLine":47,"endColumn":23},{"ruleId":"42","severity":1,"message":"48","line":47,"column":25,"nodeType":"44","messageId":"45","endLine":47,"endColumn":39},{"ruleId":"42","severity":1,"message":"49","line":24,"column":10,"nodeType":"44","messageId":"45","endLine":24,"endColumn":17},{"ruleId":"42","severity":1,"message":"50","line":45,"column":10,"nodeType":"44","messageId":"45","endLine":45,"endColumn":20},"no-native-reassign",["51"],"no-negated-in-lhs",["52"],"no-unused-vars","'TablePagination' is defined but never used.","Identifier","unusedVar","'Paggination' is defined but never used.","'searchGraph' is assigned a value but never used.","'setSearchGraph' is assigned a value but never used.","'options' is assigned a value but never used.","'createData' is defined but never used.","no-global-assign","no-unsafe-negation"]